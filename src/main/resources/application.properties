server.port=8084

#MongoDB
spring.data.mongodb.uri=mongodb+srv://${MONGO_USER}:${MONGO_PASSWORD}@${MONGO_HOST}/emailService
#spring.data.mongodb.uri=mongodb://localhost:27017/emailService
logging.level.org.springframework.data.mongodb.core.MongoTemplate=DEBUG

#JWT
security.jwt.secret=${JWT_SECRETE_KEY}
security.jwt.expiration=86400000

#App Config
spring.application.name=emailApp

email.service.api.endpoint=${EMAIL_RR_API_ENDPOINT}
email.service.api.key=${EMAIL_RR_API_KEY}
email.app.file.upload.dir=appUploads
email.app.file.batch.size=100
email.app.file.queue.topic=emailFileDataQueue

#Kafka Producer configuration
spring.kafka.producer.bootstrap-servers=${KAFKA_BROKER_HOST}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# SCRAM
#spring.kafka.producer.properties.security.protocol=SASL_SSL
#spring.kafka.producer.properties.sasl.mechanism=SCRAM-SHA-256
#spring.kafka.producer.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="${KAFKA_USERNAME}" password="${KAFKA_PASSWORD}";

# AWS
spring.kafka.producer.properties.security.protocol=SASL_SSL
spring.kafka.producer.properties.sasl.mechanism=AWS_MSK_IAM
spring.kafka.producer.properties.sasl.jaas.config = software.amazon.msk.auth.iam.IAMLoginModule required awsProfileName="awsmsk";
spring.kafka.producer.properties.sasl.client.callback.handler.class=software.amazon.msk.auth.iam.IAMClientCallbackHandler